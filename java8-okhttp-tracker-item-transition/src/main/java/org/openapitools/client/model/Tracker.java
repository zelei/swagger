/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import org.openapitools.client.model.Type;
import org.openapitools.client.model.UserReference;

/**
 * Basic properties of a codeBeamer tracker
 */
@ApiModel(description = "Basic properties of a codeBeamer tracker")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2018-12-03T14:14:40.543+01:00[Europe/Budapest]")
public class Tracker {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_KEY_NAME = "keyName";
  @SerializedName(SERIALIZED_NAME_KEY_NAME)
  private String keyName;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private DateTime createdAt;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private UserReference creator = null;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private DateTime modifiedAt;

  public static final String SERIALIZED_NAME_MODIFIER = "modifier";
  @SerializedName(SERIALIZED_NAME_MODIFIER)
  private UserReference modifier = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Description format of a tracker
   */
  @JsonAdapter(DescriptionFormatEnum.Adapter.class)
  public enum DescriptionFormatEnum {
    PLAINTEXT("PlainText"),
    
    HTML("Html"),
    
    WIKI("Wiki");

    private String value;

    DescriptionFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DescriptionFormatEnum fromValue(String text) {
      for (DescriptionFormatEnum b : DescriptionFormatEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<DescriptionFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DescriptionFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DescriptionFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DescriptionFormatEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_DESCRIPTION_FORMAT = "descriptionFormat";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_FORMAT)
  private DescriptionFormatEnum descriptionFormat;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Type type = null;

  public Tracker id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Id of a tracker
   * @return id
  **/
  @ApiModelProperty(value = "Id of a tracker")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Tracker uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Uri of a tracker
   * @return uri
  **/
  @ApiModelProperty(value = "Uri of a tracker")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public Tracker keyName(String keyName) {
    this.keyName = keyName;
    return this;
  }

   /**
   * Keyname of a tracker
   * @return keyName
  **/
  @ApiModelProperty(value = "Keyname of a tracker")
  public String getKeyName() {
    return keyName;
  }

  public void setKeyName(String keyName) {
    this.keyName = keyName;
  }

  public Tracker version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Version of a tracker
   * @return version
  **/
  @ApiModelProperty(value = "Version of a tracker")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

   /**
   * Creation date of a tracker
   * @return createdAt
  **/
  @ApiModelProperty(value = "Creation date of a tracker")
  public DateTime getCreatedAt() {
    return createdAt;
  }

  public Tracker creator(UserReference creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @ApiModelProperty(value = "")
  public UserReference getCreator() {
    return creator;
  }

  public void setCreator(UserReference creator) {
    this.creator = creator;
  }

   /**
   * Modification date of a tracker
   * @return modifiedAt
  **/
  @ApiModelProperty(value = "Modification date of a tracker")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public Tracker modifier(UserReference modifier) {
    this.modifier = modifier;
    return this;
  }

   /**
   * Get modifier
   * @return modifier
  **/
  @ApiModelProperty(value = "")
  public UserReference getModifier() {
    return modifier;
  }

  public void setModifier(UserReference modifier) {
    this.modifier = modifier;
  }

  public Tracker name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of a tracker
   * @return name
  **/
  @ApiModelProperty(value = "Name of a tracker")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Tracker description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of a tracker
   * @return description
  **/
  @ApiModelProperty(value = "Description of a tracker")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Tracker descriptionFormat(DescriptionFormatEnum descriptionFormat) {
    this.descriptionFormat = descriptionFormat;
    return this;
  }

   /**
   * Description format of a tracker
   * @return descriptionFormat
  **/
  @ApiModelProperty(value = "Description format of a tracker")
  public DescriptionFormatEnum getDescriptionFormat() {
    return descriptionFormat;
  }

  public void setDescriptionFormat(DescriptionFormatEnum descriptionFormat) {
    this.descriptionFormat = descriptionFormat;
  }

  public Tracker type(Type type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public Type getType() {
    return type;
  }

  public void setType(Type type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tracker tracker = (Tracker) o;
    return Objects.equals(this.id, tracker.id) &&
        Objects.equals(this.uri, tracker.uri) &&
        Objects.equals(this.keyName, tracker.keyName) &&
        Objects.equals(this.version, tracker.version) &&
        Objects.equals(this.createdAt, tracker.createdAt) &&
        Objects.equals(this.creator, tracker.creator) &&
        Objects.equals(this.modifiedAt, tracker.modifiedAt) &&
        Objects.equals(this.modifier, tracker.modifier) &&
        Objects.equals(this.name, tracker.name) &&
        Objects.equals(this.description, tracker.description) &&
        Objects.equals(this.descriptionFormat, tracker.descriptionFormat) &&
        Objects.equals(this.type, tracker.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uri, keyName, version, createdAt, creator, modifiedAt, modifier, name, description, descriptionFormat, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tracker {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    keyName: ").append(toIndentedString(keyName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifier: ").append(toIndentedString(modifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionFormat: ").append(toIndentedString(descriptionFormat)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

