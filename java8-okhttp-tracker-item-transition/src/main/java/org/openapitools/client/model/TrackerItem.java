/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.joda.time.DateTime;
import org.openapitools.client.model.AbstractCustomFieldReference;
import org.openapitools.client.model.AbstractFieldReference;
import org.openapitools.client.model.AssigneeReferenceField;
import org.openapitools.client.model.TrackerItemReferenceFiel;
import org.openapitools.client.model.TrackerReference;
import org.openapitools.client.model.UserReference;

/**
 * Basic properties of a codeBeamer tracker
 */
@ApiModel(description = "Basic properties of a codeBeamer tracker")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2018-12-02T20:31:20.747+01:00[Europe/Budapest]")
public class TrackerItem {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private TrackerItemReferenceFiel parent = null;

  public static final String SERIALIZED_NAME_OWNERS = "owners";
  @SerializedName(SERIALIZED_NAME_OWNERS)
  private List<AssigneeReferenceField> owners = null;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Form of a tracker item description
   */
  @JsonAdapter(DescriptionFormatEnum.Adapter.class)
  public enum DescriptionFormatEnum {
    PLAINTEXT("PlainText"),
    
    HTML("Html"),
    
    WIKI("Wiki");

    private String value;

    DescriptionFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DescriptionFormatEnum fromValue(String text) {
      for (DescriptionFormatEnum b : DescriptionFormatEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<DescriptionFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DescriptionFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DescriptionFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DescriptionFormatEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_DESCRIPTION_FORMAT = "descriptionFormat";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_FORMAT)
  private DescriptionFormatEnum descriptionFormat;

  public static final String SERIALIZED_NAME_SUBMITTED_AT = "submittedAt";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_AT)
  private DateTime submittedAt;

  public static final String SERIALIZED_NAME_SUBMITTED_BY = "submitter";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_BY)
  private UserReference submittedBy = null;

  public static final String SERIALIZED_NAME_MODIFIED_AT = "modifiedAt";
  @SerializedName(SERIALIZED_NAME_MODIFIED_AT)
  private DateTime modifiedAt;

  public static final String SERIALIZED_NAME_MODIFIER = "modifier";
  @SerializedName(SERIALIZED_NAME_MODIFIER)
  private UserReference modifier = null;

  public static final String SERIALIZED_NAME_ASSIGNED_AT = "assignedAt";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_AT)
  private DateTime assignedAt;

  public static final String SERIALIZED_NAME_ASSIGNED_TO = "assignedTo";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_TO)
  private List<AssigneeReferenceField> assignedTo = null;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private DateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private DateTime endDate;

  public static final String SERIALIZED_NAME_CLOSED_AT = "closedAt";
  @SerializedName(SERIALIZED_NAME_CLOSED_AT)
  private DateTime closedAt;

  public static final String SERIALIZED_NAME_STORY_POINTS = "storyPoints";
  @SerializedName(SERIALIZED_NAME_STORY_POINTS)
  private Integer storyPoints;

  public static final String SERIALIZED_NAME_TRACKER = "tracker";
  @SerializedName(SERIALIZED_NAME_TRACKER)
  private TrackerReference tracker = null;

  public static final String SERIALIZED_NAME_CHILDREN = "children";
  @SerializedName(SERIALIZED_NAME_CHILDREN)
  private List<TrackerItemReferenceFiel> children = null;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private List<AbstractCustomFieldReference> customFields = null;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private AbstractFieldReference priority = null;

  public static final String SERIALIZED_NAME_ACCRUED_MILLIS = "accruedMillis";
  @SerializedName(SERIALIZED_NAME_ACCRUED_MILLIS)
  private Long accruedMillis;

  public static final String SERIALIZED_NAME_ESTIMATED_MILLIS = "estimatedMillis";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_MILLIS)
  private Long estimatedMillis;

  public static final String SERIALIZED_NAME_SPENT_MILLIS = "spentMillis";
  @SerializedName(SERIALIZED_NAME_SPENT_MILLIS)
  private Long spentMillis;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private AbstractFieldReference status = null;

  public static final String SERIALIZED_NAME_PLATFORMS = "platforms";
  @SerializedName(SERIALIZED_NAME_PLATFORMS)
  private AbstractFieldReference platforms = null;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private AbstractFieldReference categories = null;

  public static final String SERIALIZED_NAME_SUBJECTS = "subjects";
  @SerializedName(SERIALIZED_NAME_SUBJECTS)
  private AbstractFieldReference subjects = null;

  public static final String SERIALIZED_NAME_RESOLUTIONS = "resolutions";
  @SerializedName(SERIALIZED_NAME_RESOLUTIONS)
  private AbstractFieldReference resolutions = null;

  public static final String SERIALIZED_NAME_SEVERITIES = "severities";
  @SerializedName(SERIALIZED_NAME_SEVERITIES)
  private AbstractFieldReference severities = null;

  public static final String SERIALIZED_NAME_RELEASE_METHOD = "releaseMethod";
  @SerializedName(SERIALIZED_NAME_RELEASE_METHOD)
  private AbstractFieldReference releaseMethod = null;

  public static final String SERIALIZED_NAME_TEAMS = "teams";
  @SerializedName(SERIALIZED_NAME_TEAMS)
  private AbstractFieldReference teams = null;

  public static final String SERIALIZED_NAME_ORDINAL = "ordinal";
  @SerializedName(SERIALIZED_NAME_ORDINAL)
  private Integer ordinal;

  public TrackerItem id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * ID to a object
   * @return id
  **/
  @ApiModelProperty(value = "ID to a object")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public TrackerItem uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Uri of a tracker item
   * @return uri
  **/
  @ApiModelProperty(value = "Uri of a tracker item")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public TrackerItem name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of a referenced object
   * @return name
  **/
  @ApiModelProperty(value = "Name of a referenced object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TrackerItem type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type of a referenced object
   * @return type
  **/
  @ApiModelProperty(value = "Type of a referenced object")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public TrackerItem parent(TrackerItemReferenceFiel parent) {
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @ApiModelProperty(value = "")
  public TrackerItemReferenceFiel getParent() {
    return parent;
  }

  public void setParent(TrackerItemReferenceFiel parent) {
    this.parent = parent;
  }

  public TrackerItem owners(List<AssigneeReferenceField> owners) {
    this.owners = owners;
    return this;
  }

  public TrackerItem addOwnersItem(AssigneeReferenceField ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<AssigneeReferenceField>();
    }
    this.owners.add(ownersItem);
    return this;
  }

   /**
   * Owners of a tracker item
   * @return owners
  **/
  @ApiModelProperty(value = "Owners of a tracker item")
  public List<AssigneeReferenceField> getOwners() {
    return owners;
  }

  public void setOwners(List<AssigneeReferenceField> owners) {
    this.owners = owners;
  }

   /**
   * Version of a tracker item
   * @return version
  **/
  @ApiModelProperty(value = "Version of a tracker item")
  public Integer getVersion() {
    return version;
  }

  public TrackerItem description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of a tracker item
   * @return description
  **/
  @ApiModelProperty(value = "Description of a tracker item")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TrackerItem descriptionFormat(DescriptionFormatEnum descriptionFormat) {
    this.descriptionFormat = descriptionFormat;
    return this;
  }

   /**
   * Form of a tracker item description
   * @return descriptionFormat
  **/
  @ApiModelProperty(value = "Form of a tracker item description")
  public DescriptionFormatEnum getDescriptionFormat() {
    return descriptionFormat;
  }

  public void setDescriptionFormat(DescriptionFormatEnum descriptionFormat) {
    this.descriptionFormat = descriptionFormat;
  }

   /**
   * Submission date of a tracker item
   * @return submittedAt
  **/
  @ApiModelProperty(value = "Submission date of a tracker item")
  public DateTime getSubmittedAt() {
    return submittedAt;
  }

  public TrackerItem submittedBy(UserReference submittedBy) {
    this.submittedBy = submittedBy;
    return this;
  }

   /**
   * Get submittedBy
   * @return submittedBy
  **/
  @ApiModelProperty(value = "")
  public UserReference getSubmittedBy() {
    return submittedBy;
  }

  public void setSubmittedBy(UserReference submittedBy) {
    this.submittedBy = submittedBy;
  }

   /**
   * Modification date of a tracker item
   * @return modifiedAt
  **/
  @ApiModelProperty(value = "Modification date of a tracker item")
  public DateTime getModifiedAt() {
    return modifiedAt;
  }

  public TrackerItem modifier(UserReference modifier) {
    this.modifier = modifier;
    return this;
  }

   /**
   * Get modifier
   * @return modifier
  **/
  @ApiModelProperty(value = "")
  public UserReference getModifier() {
    return modifier;
  }

  public void setModifier(UserReference modifier) {
    this.modifier = modifier;
  }

   /**
   * Assigne date of a tracker item
   * @return assignedAt
  **/
  @ApiModelProperty(value = "Assigne date of a tracker item")
  public DateTime getAssignedAt() {
    return assignedAt;
  }

  public TrackerItem assignedTo(List<AssigneeReferenceField> assignedTo) {
    this.assignedTo = assignedTo;
    return this;
  }

  public TrackerItem addAssignedToItem(AssigneeReferenceField assignedToItem) {
    if (this.assignedTo == null) {
      this.assignedTo = new ArrayList<AssigneeReferenceField>();
    }
    this.assignedTo.add(assignedToItem);
    return this;
  }

   /**
   * Assignees of a tracker item
   * @return assignedTo
  **/
  @ApiModelProperty(value = "Assignees of a tracker item")
  public List<AssigneeReferenceField> getAssignedTo() {
    return assignedTo;
  }

  public void setAssignedTo(List<AssigneeReferenceField> assignedTo) {
    this.assignedTo = assignedTo;
  }

  public TrackerItem startDate(DateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Start date of a tracker item
   * @return startDate
  **/
  @ApiModelProperty(value = "Start date of a tracker item")
  public DateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(DateTime startDate) {
    this.startDate = startDate;
  }

  public TrackerItem endDate(DateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * End date of a tracker item
   * @return endDate
  **/
  @ApiModelProperty(value = "End date of a tracker item")
  public DateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(DateTime endDate) {
    this.endDate = endDate;
  }

  public TrackerItem closedAt(DateTime closedAt) {
    this.closedAt = closedAt;
    return this;
  }

   /**
   * Close date of a tracker item
   * @return closedAt
  **/
  @ApiModelProperty(value = "Close date of a tracker item")
  public DateTime getClosedAt() {
    return closedAt;
  }

  public void setClosedAt(DateTime closedAt) {
    this.closedAt = closedAt;
  }

  public TrackerItem storyPoints(Integer storyPoints) {
    this.storyPoints = storyPoints;
    return this;
  }

   /**
   * Story points of a tracker item
   * @return storyPoints
  **/
  @ApiModelProperty(value = "Story points of a tracker item")
  public Integer getStoryPoints() {
    return storyPoints;
  }

  public void setStoryPoints(Integer storyPoints) {
    this.storyPoints = storyPoints;
  }

  public TrackerItem tracker(TrackerReference tracker) {
    this.tracker = tracker;
    return this;
  }

   /**
   * Get tracker
   * @return tracker
  **/
  @ApiModelProperty(value = "")
  public TrackerReference getTracker() {
    return tracker;
  }

  public void setTracker(TrackerReference tracker) {
    this.tracker = tracker;
  }

   /**
   * Children of a tracker item
   * @return children
  **/
  @ApiModelProperty(value = "Children of a tracker item")
  public List<TrackerItemReferenceFiel> getChildren() {
    return children;
  }

  public TrackerItem customFields(List<AbstractCustomFieldReference> customFields) {
    this.customFields = customFields;
    return this;
  }

  public TrackerItem addCustomFieldsItem(AbstractCustomFieldReference customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<AbstractCustomFieldReference>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * Custom field of a tracker item
   * @return customFields
  **/
  @ApiModelProperty(value = "Custom field of a tracker item")
  public List<AbstractCustomFieldReference> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<AbstractCustomFieldReference> customFields) {
    this.customFields = customFields;
  }

  public TrackerItem priority(AbstractFieldReference priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getPriority() {
    return priority;
  }

  public void setPriority(AbstractFieldReference priority) {
    this.priority = priority;
  }

   /**
   * Accrued work time of a tracker item in milliseconds
   * @return accruedMillis
  **/
  @ApiModelProperty(value = "Accrued work time of a tracker item in milliseconds")
  public Long getAccruedMillis() {
    return accruedMillis;
  }

  public TrackerItem estimatedMillis(Long estimatedMillis) {
    this.estimatedMillis = estimatedMillis;
    return this;
  }

   /**
   * Estimated work time of a tracker item in milliseconds
   * @return estimatedMillis
  **/
  @ApiModelProperty(value = "Estimated work time of a tracker item in milliseconds")
  public Long getEstimatedMillis() {
    return estimatedMillis;
  }

  public void setEstimatedMillis(Long estimatedMillis) {
    this.estimatedMillis = estimatedMillis;
  }

   /**
   * Spent work time of a tracker item in milliseconds
   * @return spentMillis
  **/
  @ApiModelProperty(value = "Spent work time of a tracker item in milliseconds")
  public Long getSpentMillis() {
    return spentMillis;
  }

  public TrackerItem status(AbstractFieldReference status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getStatus() {
    return status;
  }

  public void setStatus(AbstractFieldReference status) {
    this.status = status;
  }

  public TrackerItem platforms(AbstractFieldReference platforms) {
    this.platforms = platforms;
    return this;
  }

   /**
   * Get platforms
   * @return platforms
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getPlatforms() {
    return platforms;
  }

  public void setPlatforms(AbstractFieldReference platforms) {
    this.platforms = platforms;
  }

  public TrackerItem categories(AbstractFieldReference categories) {
    this.categories = categories;
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getCategories() {
    return categories;
  }

  public void setCategories(AbstractFieldReference categories) {
    this.categories = categories;
  }

  public TrackerItem subjects(AbstractFieldReference subjects) {
    this.subjects = subjects;
    return this;
  }

   /**
   * Get subjects
   * @return subjects
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getSubjects() {
    return subjects;
  }

  public void setSubjects(AbstractFieldReference subjects) {
    this.subjects = subjects;
  }

  public TrackerItem resolutions(AbstractFieldReference resolutions) {
    this.resolutions = resolutions;
    return this;
  }

   /**
   * Get resolutions
   * @return resolutions
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getResolutions() {
    return resolutions;
  }

  public void setResolutions(AbstractFieldReference resolutions) {
    this.resolutions = resolutions;
  }

  public TrackerItem severities(AbstractFieldReference severities) {
    this.severities = severities;
    return this;
  }

   /**
   * Get severities
   * @return severities
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getSeverities() {
    return severities;
  }

  public void setSeverities(AbstractFieldReference severities) {
    this.severities = severities;
  }

  public TrackerItem releaseMethod(AbstractFieldReference releaseMethod) {
    this.releaseMethod = releaseMethod;
    return this;
  }

   /**
   * Get releaseMethod
   * @return releaseMethod
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getReleaseMethod() {
    return releaseMethod;
  }

  public void setReleaseMethod(AbstractFieldReference releaseMethod) {
    this.releaseMethod = releaseMethod;
  }

  public TrackerItem teams(AbstractFieldReference teams) {
    this.teams = teams;
    return this;
  }

   /**
   * Get teams
   * @return teams
  **/
  @ApiModelProperty(value = "")
  public AbstractFieldReference getTeams() {
    return teams;
  }

  public void setTeams(AbstractFieldReference teams) {
    this.teams = teams;
  }

  public TrackerItem ordinal(Integer ordinal) {
    this.ordinal = ordinal;
    return this;
  }

   /**
   * Ordinal of a tracker item
   * @return ordinal
  **/
  @ApiModelProperty(value = "Ordinal of a tracker item")
  public Integer getOrdinal() {
    return ordinal;
  }

  public void setOrdinal(Integer ordinal) {
    this.ordinal = ordinal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrackerItem trackerItem = (TrackerItem) o;
    return Objects.equals(this.id, trackerItem.id) &&
        Objects.equals(this.uri, trackerItem.uri) &&
        Objects.equals(this.name, trackerItem.name) &&
        Objects.equals(this.type, trackerItem.type) &&
        Objects.equals(this.parent, trackerItem.parent) &&
        Objects.equals(this.owners, trackerItem.owners) &&
        Objects.equals(this.version, trackerItem.version) &&
        Objects.equals(this.description, trackerItem.description) &&
        Objects.equals(this.descriptionFormat, trackerItem.descriptionFormat) &&
        Objects.equals(this.submittedAt, trackerItem.submittedAt) &&
        Objects.equals(this.submittedBy, trackerItem.submittedBy) &&
        Objects.equals(this.modifiedAt, trackerItem.modifiedAt) &&
        Objects.equals(this.modifier, trackerItem.modifier) &&
        Objects.equals(this.assignedAt, trackerItem.assignedAt) &&
        Objects.equals(this.assignedTo, trackerItem.assignedTo) &&
        Objects.equals(this.startDate, trackerItem.startDate) &&
        Objects.equals(this.endDate, trackerItem.endDate) &&
        Objects.equals(this.closedAt, trackerItem.closedAt) &&
        Objects.equals(this.storyPoints, trackerItem.storyPoints) &&
        Objects.equals(this.tracker, trackerItem.tracker) &&
        Objects.equals(this.children, trackerItem.children) &&
        Objects.equals(this.customFields, trackerItem.customFields) &&
        Objects.equals(this.priority, trackerItem.priority) &&
        Objects.equals(this.accruedMillis, trackerItem.accruedMillis) &&
        Objects.equals(this.estimatedMillis, trackerItem.estimatedMillis) &&
        Objects.equals(this.spentMillis, trackerItem.spentMillis) &&
        Objects.equals(this.status, trackerItem.status) &&
        Objects.equals(this.platforms, trackerItem.platforms) &&
        Objects.equals(this.categories, trackerItem.categories) &&
        Objects.equals(this.subjects, trackerItem.subjects) &&
        Objects.equals(this.resolutions, trackerItem.resolutions) &&
        Objects.equals(this.severities, trackerItem.severities) &&
        Objects.equals(this.releaseMethod, trackerItem.releaseMethod) &&
        Objects.equals(this.teams, trackerItem.teams) &&
        Objects.equals(this.ordinal, trackerItem.ordinal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uri, name, type, parent, owners, version, description, descriptionFormat, submittedAt, submittedBy, modifiedAt, modifier, assignedAt, assignedTo, startDate, endDate, closedAt, storyPoints, tracker, children, customFields, priority, accruedMillis, estimatedMillis, spentMillis, status, platforms, categories, subjects, resolutions, severities, releaseMethod, teams, ordinal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrackerItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionFormat: ").append(toIndentedString(descriptionFormat)).append("\n");
    sb.append("    submittedAt: ").append(toIndentedString(submittedAt)).append("\n");
    sb.append("    submittedBy: ").append(toIndentedString(submittedBy)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    modifier: ").append(toIndentedString(modifier)).append("\n");
    sb.append("    assignedAt: ").append(toIndentedString(assignedAt)).append("\n");
    sb.append("    assignedTo: ").append(toIndentedString(assignedTo)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    closedAt: ").append(toIndentedString(closedAt)).append("\n");
    sb.append("    storyPoints: ").append(toIndentedString(storyPoints)).append("\n");
    sb.append("    tracker: ").append(toIndentedString(tracker)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    accruedMillis: ").append(toIndentedString(accruedMillis)).append("\n");
    sb.append("    estimatedMillis: ").append(toIndentedString(estimatedMillis)).append("\n");
    sb.append("    spentMillis: ").append(toIndentedString(spentMillis)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    subjects: ").append(toIndentedString(subjects)).append("\n");
    sb.append("    resolutions: ").append(toIndentedString(resolutions)).append("\n");
    sb.append("    severities: ").append(toIndentedString(severities)).append("\n");
    sb.append("    releaseMethod: ").append(toIndentedString(releaseMethod)).append("\n");
    sb.append("    teams: ").append(toIndentedString(teams)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

