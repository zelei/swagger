/*
 * codeBeamer swagger API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Reference to a custom field of a tracker
 */
@ApiModel(description = "Reference to a custom field of a tracker")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2018-12-02T20:31:20.747+01:00[Europe/Budapest]")

public class AbstractCustomFieldReference {
  public static final String SERIALIZED_NAME_FIELD_ID = "fieldId";
  @SerializedName(SERIALIZED_NAME_FIELD_ID)
  private Integer fieldId;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public AbstractCustomFieldReference() {
    this.type = this.getClass().getSimpleName();
  }
  public AbstractCustomFieldReference fieldId(Integer fieldId) {
    this.fieldId = fieldId;
    return this;
  }

   /**
   * Reference to a custom field
   * @return fieldId
  **/
  @ApiModelProperty(value = "Reference to a custom field")
  public Integer getFieldId() {
    return fieldId;
  }

  public void setFieldId(Integer fieldId) {
    this.fieldId = fieldId;
  }

  public AbstractCustomFieldReference uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Reference to a custom field
   * @return uri
  **/
  @ApiModelProperty(value = "Reference to a custom field")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public AbstractCustomFieldReference name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of a custom field
   * @return name
  **/
  @ApiModelProperty(value = "Name of a custom field")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AbstractCustomFieldReference type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Discriminator type of a custom field
   * @return type
  **/
  @ApiModelProperty(value = "Discriminator type of a custom field")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbstractCustomFieldReference abstractCustomFieldReference = (AbstractCustomFieldReference) o;
    return Objects.equals(this.fieldId, abstractCustomFieldReference.fieldId) &&
        Objects.equals(this.uri, abstractCustomFieldReference.uri) &&
        Objects.equals(this.name, abstractCustomFieldReference.name) &&
        Objects.equals(this.type, abstractCustomFieldReference.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldId, uri, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbstractCustomFieldReference {\n");
    
    sb.append("    fieldId: ").append(toIndentedString(fieldId)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

